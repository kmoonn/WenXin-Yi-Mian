a = [[0, '模拟笔试', '2023-08-17 11:00', [
    ['Java中String是基本数据类型吗？\n', '不是。Java中String是一个类，表示字符串，而不是基本数据类型。',
     '不是，Java中String是一个类', 0.800127], ['Java中的什么是异常？\n',
                                              'Java中的异常是程序在执行过程中出现的问题或事件。异常是程序中的错误，可能会中断正常的执行流程。Java中的异常处理是通过使用try-catch语句块来捕获并处理异常。',
                                              'Java中的异常分为两大类：受检查的异常（Checked Exceptions）和未受检查的异常（Unchecked Exceptions）。',
                                              0.411137], ['Java中的继承是什么？\n',
                                                          'Java中的继承是面向对象编程中的一个重要概念。它允许我们基于已存在的类创建新类，同时保留已存在类的特性。通过继承，子类可以继承父类的属性和方法，并且可以添加自己特有的属性和方法，或者重写父类的方法。',
                                                          'Java中的继承是一个对象获取父对象的所有属性和行为的机制。它是面向对象编程系统（OOP）的重要组成部分。Java中继承的思想是，创建基于现有类的新类，从现有类中继承，可以重用父类的方法和字段，还可以在当前类中添加新方法和字段。\n\n要实现继承，使用extends关键字。在Java中，所有的类都直接或间接地继承自Object类。',
                                                          0.659822],
    ['Java中的final关键字有哪些用法？\n', 'Java中的final关键字有以下几种用法',
     '用于声明变量；用于声明方法；用于声明类；final也可以用于接口中的方法前，表示该方法默认实现，可以由实现该接口的类进行默认实现。',
     0.351222], ['Java中的基本数据类型有哪些？\n', 'byte, short, int, long, float, double, boolean, char。',
                 '数值类型：\n\n整数类型：byte（字节型）、short（短整型）、int（整型）、long（长整型）。\n浮点类型：float（单精度浮点型）、double（双精度浮点型）。\n字符类型：char（字符型）。\n\n布尔类型：boolean（布尔型）',
                 0.705912],
    ['\nJava 中常用哪几种类型集合，他们特点和用法分别是什么？请用几句话简单概括下。\n\n', '\nJava 中常用集合类型有',
     'Java中的继承和接口在以下五个方面存在区别：\n\n修饰符：继承用extends，接口用implements。\n多重继承：Java不支持多重继承，即一个类只能继承一个父类，但可以实现多个接口，用逗号分隔。\n全局常量：接口中只能定义全局常量，而不能定义成员变量。\n抽象方法：接口中只能定义抽象方法，而不能定义具体方法。\n实现方式：子类通过继承父类的方式来获得其方法和变量，而接口则是在类中实现接口中的所有抽象方法。',
     0], ['Java中的继承和接口有什么区别？\n', 'extending extends关键字表示继承关系，实现 interface关键字表示实现关系。',
          'Java中的HashMap是一种使用键值对（key-value pair）进行数据存储的数据结构。它基于哈希表（hash table）实现，能够提供快速的插入、删除和查询操作。\n\nHashMap内部使用一个数组（array）作为底层数据的存储结构，这个数组被称为“桶（bucket）”。每个桶都包含一个链表（linked list），链表中的每个节点（node）都存储了一个键值对。\n\n当插入一个键值对时，HashMap会根据键的哈希码计算出其在数组中的位置，然后将该键值对存储在该位置的桶中。如果该位置的桶中已经存在其他键值对，则新键值对会被插入到链表的末尾。',
          0]
]
      ]
     ]
